{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The Laravel Framework.",
    "keywords": [
        "framework",
        "laravel"
    ],
    "license": "MIT",
    "require": {
        "php": "^7.1.3",
        "ext-PDO": "*",
        "ext-bcmath": "*",
        "ext-ctype": "*",
        "ext-json": "*",
        "ext-mbstring": "*",
        "ext-openssl": "*",
        "ext-tokenizer": "*",
        "ext-xml": "*",
        "beyondcode/laravel-self-diagnosis": "^1.0",
        "fideloper/proxy": "^4.0",
        "hesto/multi-auth": "^2.0",
        "laravel/framework": "5.8.*",
        "laravel/tinker": "^1.0"
    },
    "require-dev": {
        "roave/security-advisories": "dev-master",
        "beyondcode/laravel-dump-server": "^1.0",
        "filp/whoops": "^2.0",
        "fzaninotto/faker": "^1.4",
        "mockery/mockery": "^1.0",
        "nunomaduro/collision": "^2.0",
        "phpunit/phpunit": "^7.5",
        "ajthinking/tinx": "^2.1",
        "barryvdh/laravel-debugbar": "^3.1",
        "barryvdh/laravel-ide-helper": "^2.5",
        "laracasts/generators": "^1.1"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        },
        "classmap": [
            "database/seeds",
            "database/factories"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "ide:min": [
            "@php artisan ide-helper:generate",
            "@php artisan ide-helper:meta"
        ],
        "ide": [
            "@composer ide:min",
            "@php artisan ide-helper:models --write --smart-reset"
        ],
        "diag": [
            "@php artisan self-diagnosis"
        ],
        "check:env": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-root-package-install": [
            "@composer check:env"
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "reset:vendor": [
            "rm -rf vendor/*/"
        ],
        "reset:npm": [
            "rm -rf node-modules/*/"
        ],
        "reset:lock": [
            "rm -f composer.lock"
        ],
        "reset": [
            "@composer reset:vendor",
            "@composer reset:npm",
            "@composer reset:lock",
            "@composer check:env",
            "@composer install",
            "@composer ide:min",
            "@php artisan key:generate --ansi"
        ],
        "fix": [
            "@composer reset",
            "@php artisan migrate --force"
        ],
        "mfs": [
            "@php artisan migrate:fresh --seed"
        ],
        "fresh": [
            "@composer reset",
            "@composer mfs"
        ],
        "frontend": [
            "yarn",
            "yarn prod"
        ],
        "frontend:hard": [
            "@composer reset:npm",
            "@composer frontend"
        ],
        "test": [
            "@php 'vendor/phpunit/phpunit/phpunit' --bootstrap 'vendor/autoload.php' --configuration 'phpunit.xml' --testsuite 'Unit'",
            "@php 'vendor/phpunit/phpunit/phpunit' --bootstrap 'vendor/autoload.php' --configuration 'phpunit.xml' --testsuite 'Feature'"
        ],
        "post-install-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postInstall"
        ],
        "install:all": [
            "@composer install",
            "@composer frontend"
        ],
        "install:hard": [
            "@composer reset:vendor",
            "@composer check:env",
            "@composer install",
            "@composer ide:min"
        ],
        "install:mfs": [
            "@composer install",
            "@composer mfs"
        ],
        "imfs": [
            "@composer install:mfs"
        ],
        "post-update-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postUpdate"
        ],
        "update:all": [
            "@composer update",
            "@composer frontend"
        ],
        "update:hard": [
            "@composer reset:vendor",
            "@composer reset:lock",
            "@composer check:env",
            "@composer update",
            "@composer ide:min"
        ]
    }
}
